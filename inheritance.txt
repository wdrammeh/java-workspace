#
1.  By default, all the constructors in a subclass delegate to the default constructor
    in the super class, unless otherwise specified.
2.  If the super class defines no default constructor out of multiple constructors present,
    then it becomes incumbent on all the constructors in a subclass to explicitly make a super
    call as to which constructor they want to infer.
3.  In a case where the super class defines the default constructor out of multiple other
    constructors present, to avoid a particular sub-constructor from auto calling it,
    invoke the super(Type...), specifying  which constructor to be called, otherwise, the default
    comes in play.

# Abstract classes are intended to be extended; and where extended all abstract methods
must be implemented, unless of course, where the implementing type is itself abstract.

# Interfaces are entirely abstract.